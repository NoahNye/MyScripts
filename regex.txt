
# See also https://regex101.com/library

# IP Address:
((25[0-5])|(2[0-4][0-9])|(1[0-9][0-9])|([1-9][0-9])|([0-9]))\.((25[0-5])|(2[0-4][0-9])|(1[0-9][0-9])|([1-9][0-9])|([0-9]))\.((25[0-5])|(2[0-4][0-9])|(1[0-9][0-9])|([1-9][0-9])|([0-9]))\.((25[0-5])|(2[0-4][0-9])|(1[0-9][0-9])|([1-9][0-9])|([0-9]))

# Private IP Address:
# IP Address:
(10|192)\.((25[0-5])|(2[0-4][0-9])|(1[0-9][0-9])|([1-9][0-9])|([0-9]))\.((25[0-5])|(2[0-4][0-9])|(1[0-9][0-9])|([1-9][0-9])|([0-9]))\.((25[0-5])|(2[0-4][0-9])|(1[0-9][0-9])|([1-9][0-9])|([0-9]))

# Find / replace line-breaks and white spaces before a {
(\S)([\s\n]{2,}){

# Find / replace line-breaks from between Function {
[F|f]unction\s+(\S+)[\s\n]+{ // Function $1 {

# Find / replace line-breaks between Function { , OR , ) {
([F|f]unction)[\s\n]{2,}(\S+)[\s\n]+|\))[\s\n]{2,}{ // $1 {

# Find / replace line-breaks from between } else {
}[\s\n]{2,}else[\s\n]+{ // } else {

# Find / replace single backslash with doubles (e.g. for json)
([^\\])\\([^\\]) // $1\\\\$2

# Find / replace line-breaks from between } elseif
}[\s\n]+(else|elseif)[\s\n]+{ // } $1 {
    